function fetchEventbriteAttendeesWithCampers() {
    var oauthToken = 'oauth token'; // Replace with your OAuth token
    var eventIds = [
      'eventid', // Replace with your specific Eventbrite event IDs
      'eventid',
      'eventid',
      'eventid',
      'eventid',
      'eventid',
    ];
  
  var sheetNames = [
    'Event Name 1', // Replace with your custom sheet names
    'Event Name 2',
    'Event Name 3',
    'Event Name 4',
    'Event Name 5',
    'Event Name 6',
    'Event Name 7'
  ];

  // Corresponding question IDs for each event
  var camperQuestionIds = [
    'questionid1', // Replace with your question IDs for each event
    'questionid2',
    'questionid3',
    'question_id_4',
    'question_id_5',
    'question_id_6',
    'question_id_7'
  ];
  
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  
  // Loop through each event ID
  for (var j = 0; j < eventIds.length; j++) {
    var eventId = eventIds[j];
    var sheetName = sheetNames[j]; // Custom name for the sheet
    var camperQuestionId = camperQuestionIds[j]; // Get the specific question ID for this event
    var url = 'https://www.eventbriteapi.com/v3/events/' + eventId + '/attendees/';
    
    var params = {
      'method': 'GET',
      'headers': {
        'Authorization': 'Bearer ' + oauthToken
      },
      'muteHttpExceptions': true
    };
    
    var response = UrlFetchApp.fetch(url, params);
    var result = JSON.parse(response.getContentText());

    if (response.getResponseCode() != 200) {
      Logger.log('Error for event ' + eventId + ': ' + result.error_description);
      continue;
    }
    
    var attendees = result.attendees;
    if (attendees.length === 0) {
      Logger.log('No attendees found for event ' + eventId);
      continue;
    }
    
    // Create or select a sheet for the event
    var sheet = spreadsheet.getSheetByName(sheetName);
    if (sheet == null) {
      sheet = spreadsheet.insertSheet(sheetName);
    } else {
      sheet.clear(); // Clear any existing content
    }
    
    // Set up headers
    sheet.getRange(1, 1).setValue('Parent First Name');
    sheet.getRange(1, 2).setValue('Parent Last Name');
    sheet.getRange(1, 3).setValue('Email Address');
    sheet.getRange(1, 4).setValue('Phone Number');
    sheet.getRange(1, 5).setValue("Camper's Names");
    
    // Insert attendees into the sheet
    for (var i = 0; i < attendees.length; i++) {
      var attendee = attendees[i];
      
      var parentFirstName = attendee.profile.first_name;
      var parentLastName = attendee.profile.last_name;
      var email = attendee.profile.email;
      var phone = attendee.profile.cell_phone || 'N/A';
      
      // Initialize camper's names variable as an array to hold multiple names
      var camperNames = [];
      
      // Check if there are custom questions with camper's name based on question ID
      var answers = attendee.answers;
      Logger.log('Answers for attendee: ' + JSON.stringify(answers)); // Debugging: Log the answers

      if (answers && answers.length > 0) {
        for (var k = 0; k < answers.length; k++) {
          var questionId = answers[k].question_id; // Match the question by ID
          var answer = answers[k].answer;

          Logger.log('Question ID: ' + questionId + ' | Answer: ' + answer); // Debugging: Log question ID and answer

          // Look for the specific question ID related to the camper's name
          if (questionId === camperQuestionId) {
            camperNames.push(answer); // Add each camper's name to the array
          }
        }
      }
      
      // Combine camper names into a single string (comma-separated if multiple campers)
      var camperNamesString = camperNames.length > 0 ? camperNames.join(", ") : 'N/A';
      
      // Populate the sheet
      sheet.getRange(i + 2, 1).setValue(parentFirstName);
      sheet.getRange(i + 2, 2).setValue(parentLastName);
      sheet.getRange(i + 2, 3).setValue(email);
      sheet.getRange(i + 2, 4).setValue(phone);
      sheet.getRange(i + 2, 5).setValue(camperNamesString);
    }
    
    Logger.log('Fetched ' + attendees.length + ' attendees for event ' + eventId);
  }
}
